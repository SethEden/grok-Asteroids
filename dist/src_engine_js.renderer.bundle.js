"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(global["webpackChunkgrok_gamebb"] = global["webpackChunkgrok_gamebb"] || []).push([["src_engine_js"],{

/***/ "./src/components/position.js":
/*!************************************!*\
  !*** ./src/components/position.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPosition: () => (/* binding */ createPosition)\n/* harmony export */ });\nvar createPosition = function createPosition(x, y) {\n  return {\n    x: x,\n    y: y\n  };\n};\n\n//# sourceURL=webpack://grok-gamebb/./src/components/position.js?");

/***/ }),

/***/ "./src/components/renderable.js":
/*!**************************************!*\
  !*** ./src/components/renderable.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createRenderable: () => (/* binding */ createRenderable)\n/* harmony export */ });\n// src/components/renderable.js\nvar createRenderable = function createRenderable(_ref) {\n  var BABYLON = _ref.BABYLON,\n    scene = _ref.scene,\n    type = _ref.type,\n    size = _ref.size,\n    points = _ref.points,\n    color = _ref.color;\n  var renderObject;\n  switch (type) {\n    case 'sprite':\n      throw new Error('Sprite type no longer supported');\n    case 'circle':\n      renderObject = BABYLON.MeshBuilder.CreateDisc('circle', {\n        radius: size / 2,\n        sideOrientation: BABYLON.Mesh.DOUBLESIDE\n      }, scene);\n      renderObject.position.z = 0;\n      logVertices(renderObject, 'circle');\n      break;\n    case 'square':\n      renderObject = BABYLON.MeshBuilder.CreatePlane('square', {\n        size: size,\n        sideOrientation: BABYLON.Mesh.DOUBLESIDE\n      }, scene);\n      renderObject.position.z = 0;\n      logVertices(renderObject, 'square');\n      break;\n    case 'lines':\n      renderObject = BABYLON.MeshBuilder.CreateLines('lines', {\n        points: points\n      }, scene);\n      renderObject.position.z = 0;\n      logVertices(renderObject, 'lines');\n      break;\n    case 'custom':\n      renderObject = points;\n      renderObject.position.z = 0;\n      logVertices(renderObject, 'custom');\n      break;\n    default:\n      throw new Error(\"Unknown renderable type: \".concat(type));\n  }\n  var material = new BABYLON.StandardMaterial('mat', scene);\n  var finalColor = color || new BABYLON.Color3(1, 1, 1);\n  material.diffuseColor = finalColor;\n  material.emissiveColor = finalColor;\n  renderObject.material = material;\n  if (renderObject.isVisible !== undefined) {\n    window.electronAPI.ipcRenderer.send('log', \"Renderable \".concat(type, \" visibility: \").concat(renderObject.isVisible));\n  } else {\n    window.electronAPI.ipcRenderer.send('log', \"Renderable \".concat(type, \" no visibility property\"));\n  }\n  window.electronAPI.ipcRenderer.send('log', \"Created renderable: \".concat(type, \", mesh: \").concat(renderObject.name));\n  return {\n    renderObject: renderObject\n  };\n};\nvar logVertices = function logVertices(mesh, type) {\n  if (mesh && mesh.geometry) {\n    var vertices = mesh.geometry.getVerticesData(BABYLON.VertexBuffer.PositionKind);\n    if (vertices) {\n      var vertexCount = vertices.length / 3;\n      var vertexLog = \"Vertices for \".concat(type, \" (\").concat(mesh.name, \"):\");\n      for (var i = 0; i < vertexCount; i++) {\n        var x = vertices[i * 3];\n        var y = vertices[i * 3 + 1];\n        var z = vertices[i * 3 + 2];\n        vertexLog += \" (\".concat(x, \", \").concat(y, \", \").concat(z, \")\");\n      }\n      window.electronAPI.ipcRenderer.send('log', vertexLog);\n    } else {\n      window.electronAPI.ipcRenderer.send('log', \"No vertices for \".concat(type, \" (\").concat(mesh.name, \")\"));\n    }\n  } else {\n    window.electronAPI.ipcRenderer.send('log', \"No geometry for \".concat(type));\n  }\n};\n\n//# sourceURL=webpack://grok-gamebb/./src/components/renderable.js?");

/***/ }),

/***/ "./src/components/velocity.js":
/*!************************************!*\
  !*** ./src/components/velocity.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createVelocity: () => (/* binding */ createVelocity)\n/* harmony export */ });\nvar createVelocity = function createVelocity(vx, vy) {\n  return {\n    vx: vx,\n    vy: vy\n  };\n};\n\n//# sourceURL=webpack://grok-gamebb/./src/components/velocity.js?");

/***/ }),

/***/ "./src/engine.js":
/*!***********************!*\
  !*** ./src/engine.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("var babylonjs__WEBPACK_IMPORTED_MODULE_0___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   engine: () => (/* binding */ engine)\n/* harmony export */ });\n/* harmony import */ var babylonjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! babylonjs */ \"./node_modules/babylonjs/babylon.js\");\n/* harmony import */ var _entities_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./entities.js */ \"./src/entities.js\");\n/* harmony import */ var _systems_movement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./systems/movement.js */ \"./src/systems/movement.js\");\n/* harmony import */ var _systems_rendering_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./systems/rendering.js */ \"./src/systems/rendering.js\");\n/* harmony import */ var _systems_input_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./systems/input.js */ \"./src/systems/input.js\");\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./state.js */ \"./src/state.js\");\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\n// src/engine.js\n\n\n\n\n\n\nvar engine = function engine(canvas, displays) {\n  console.log('Engine: Initializing in control window (direct log)');\n  window.electronAPI.ipcRenderer.send('log', 'Engine: Initializing in control window');\n  if (!canvas) {\n    console.error('Engine: Canvas element is null or undefined');\n    window.electronAPI.ipcRenderer.send('log', 'Engine: Canvas element is null or undefined');\n    return;\n  }\n  var babylonEngine = new babylonjs__WEBPACK_IMPORTED_MODULE_0__.Engine(canvas, true);\n  var scene = new babylonjs__WEBPACK_IMPORTED_MODULE_0__.Scene(babylonEngine);\n  scene.clearColor = new babylonjs__WEBPACK_IMPORTED_MODULE_0__.Color4(0, 0, 0, 1);\n  var sortedDisplays = _toConsumableArray(displays).sort(function (a, b) {\n    return a.bounds.x - b.bounds.x;\n  });\n  var minX = Math.min.apply(Math, _toConsumableArray(sortedDisplays.map(function (d) {\n    return d.bounds.x;\n  })));\n  var worldWidth = sortedDisplays.reduce(function (sum, d) {\n    return sum + d.bounds.width;\n  }, 0);\n  var worldHeight = sortedDisplays[0].bounds.height;\n  var entities = (0,_entities_js__WEBPACK_IMPORTED_MODULE_1__.createEntities)({\n    BABYLON: /*#__PURE__*/ (babylonjs__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (babylonjs__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(babylonjs__WEBPACK_IMPORTED_MODULE_0__, 2))),\n    scene: scene\n  });\n  (0,_state_js__WEBPACK_IMPORTED_MODULE_5__.setEntities)(entities);\n  var inputSystem = (0,_systems_input_js__WEBPACK_IMPORTED_MODULE_4__.setupInput)(entities, {\n    canvas: canvas,\n    displays: sortedDisplays,\n    currentDisplayId: 0\n  });\n  inputSystem.initialize(scene);\n  var systems = [_systems_movement_js__WEBPACK_IMPORTED_MODULE_2__.updateMovement, (0,_systems_rendering_js__WEBPACK_IMPORTED_MODULE_3__.updateRendering)({\n    BABYLON: /*#__PURE__*/ (babylonjs__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (babylonjs__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(babylonjs__WEBPACK_IMPORTED_MODULE_0__, 2))),\n    scene: scene,\n    camera: null,\n    canvas: canvas\n  }), _systems_input_js__WEBPACK_IMPORTED_MODULE_4__.updateInput];\n\n  // Dummy camera for control window\n  var dummyCamera = new babylonjs__WEBPACK_IMPORTED_MODULE_0__.FreeCamera('dummy', new babylonjs__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, -500), scene);\n  dummyCamera.setTarget(new babylonjs__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, -300));\n  dummyCamera.viewport = new babylonjs__WEBPACK_IMPORTED_MODULE_0__.Viewport(0, 0, 1, 1);\n  scene.activeCameras.push(dummyCamera);\n  var lastTime = performance.now();\n  var run = function run() {\n    var loop = function loop() {\n      var currentTime = performance.now();\n      var delta = (currentTime - lastTime) / 1000;\n      lastTime = currentTime;\n      systems[0](entities, delta, {\n        worldWidth: worldWidth,\n        worldHeight: worldHeight,\n        wrap: true\n      });\n      systems[1](entities);\n      systems[2](entities);\n      window.electronAPI.ipcRenderer.send('render-frame', entities.map(function (e) {\n        var _e$renderable;\n        return {\n          id: e.id,\n          position: {\n            x: e.position.x,\n            y: e.position.y\n          },\n          rotation: ((_e$renderable = e.renderable) === null || _e$renderable === void 0 ? void 0 : _e$renderable.renderObject.rotation.z) || 0\n        };\n      }));\n      babylonEngine.runRenderLoop(function () {\n        scene.render();\n        window.electronAPI.ipcRenderer.send('log', \"Engine: Frame rendered, entities=\".concat(entities.length, \", views=\").concat(babylonEngine.views.length, \", meshes=\").concat(scene.meshes.length));\n      });\n    };\n    console.log('Engine: Starting render loop (direct log)');\n    window.electronAPI.ipcRenderer.send('log', 'Engine: Starting render loop');\n    loop();\n    return function () {\n      babylonEngine.stopRenderLoop();\n      scene.dispose();\n      babylonEngine.dispose();\n      window.electronAPI.ipcRenderer.send('log', 'Engine: Stopped');\n    };\n  };\n  window.electronAPI.ipcRenderer.on('add-canvas', function (event, _ref) {\n    var displayId = _ref.displayId,\n      bounds = _ref.bounds;\n    console.log(\"Engine: Received add-canvas for display \".concat(displayId, \" (direct log)\"));\n    window.electronAPI.ipcRenderer.send('log', \"Engine: Received add-canvas for display \".concat(displayId));\n    var screenWidth = bounds.width;\n    var screenHeight = bounds.height;\n    var camera = new babylonjs__WEBPACK_IMPORTED_MODULE_0__.FreeCamera(\"camera_\".concat(displayId), new babylonjs__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, -500), scene);\n    camera.minZ = 0.1;\n    camera.maxZ = 1000;\n    camera.attachControl(canvas, true); // Temporary: control canvas\n    camera.angularSensibility = 0;\n    camera.keysUp = [];\n    camera.keysDown = [];\n    camera.keysLeft = [];\n    camera.keysRight = [];\n    camera.fov = 1.74;\n    camera.position.x = bounds.x - minX + screenWidth / 2 - worldWidth / 2;\n    camera.position.y = 0;\n    var aspectRatio = screenWidth / screenHeight;\n    var verticalFov = camera.fov;\n    var horizontalFov = 2 * Math.atan(Math.tan(verticalFov / 2) * aspectRatio);\n    var d = screenWidth / (2 * Math.tan(horizontalFov / 2));\n    camera.position.z = -d;\n    var target = new babylonjs__WEBPACK_IMPORTED_MODULE_0__.Vector3(camera.position.x, camera.position.y, camera.position.z + 200);\n    camera.setTarget(target);\n    camera.lockedTarget = target;\n    camera.viewport = new babylonjs__WEBPACK_IMPORTED_MODULE_0__.Viewport(0, 0, 1, 1);\n    var view = babylonEngine.registerView(canvas, camera); // Temporary: control canvas\n    scene.activeCameras.push(camera);\n    window.electronAPI.ipcRenderer.send('log', \"Engine: Camera Position: \".concat(displayId, \": pos: \").concat(camera.position.x, \", \").concat(camera.position.y, \", \").concat(camera.position.z, \", fov: \").concat(camera.fov));\n    window.electronAPI.ipcRenderer.send('log', \"Engine: Camera Target: \".concat(displayId, \": pos: \").concat(target.x, \", \").concat(target.y, \", \").concat(target.z));\n    window.electronAPI.ipcRenderer.send('log', \"Engine: View added: \".concat(displayId, \", views: \").concat(babylonEngine.views.length, \", activeCameras: \").concat(scene.activeCameras.length));\n    window.electronAPI.ipcRenderer.send('canvas-added', {\n      displayId: displayId\n    });\n  });\n  window.electronAPI.ipcRenderer.on('mousemove', function (event, _ref2) {\n    var x = _ref2.x,\n      y = _ref2.y,\n      displayId = _ref2.displayId;\n    window.electronAPI.ipcRenderer.send('log', \"Engine: Mousemove for display \".concat(displayId, \": x=\").concat(x, \", y=\").concat(y));\n    inputSystem.updateTargetPosition(x, y, displayId);\n  });\n  var stopEngine = run();\n  window.onbeforeunload = function () {\n    stopEngine();\n  };\n  return stopEngine;\n};\n\n//# sourceURL=webpack://grok-gamebb/./src/engine.js?");

/***/ }),

/***/ "./src/entities.js":
/*!*************************!*\
  !*** ./src/entities.js ***!
  \*************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createBullet: () => (/* binding */ createBullet),\n/* harmony export */   createEntities: () => (/* binding */ createEntities)\n/* harmony export */ });\n/* harmony import */ var _components_position_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/position.js */ \"./src/components/position.js\");\n/* harmony import */ var _components_velocity_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/velocity.js */ \"./src/components/velocity.js\");\n/* harmony import */ var _components_renderable_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/renderable.js */ \"./src/components/renderable.js\");\n// src/entities.js\n\n\n\nvar createEntities = function createEntities(_ref) {\n  var BABYLON = _ref.BABYLON,\n    scene = _ref.scene;\n  var target = {\n    position: (0,_components_position_js__WEBPACK_IMPORTED_MODULE_0__.createPosition)(0, 0),\n    renderable: (0,_components_renderable_js__WEBPACK_IMPORTED_MODULE_2__.createRenderable)({\n      BABYLON: BABYLON,\n      scene: scene,\n      type: 'lines',\n      points: [new BABYLON.Vector3(-5, 0, 0), new BABYLON.Vector3(5, 0, 0)],\n      color: new BABYLON.Color3(1, 1, 1)\n    }),\n    id: 'target'\n  };\n  var playerShip = {\n    position: (0,_components_position_js__WEBPACK_IMPORTED_MODULE_0__.createPosition)(0, 0),\n    velocity: (0,_components_velocity_js__WEBPACK_IMPORTED_MODULE_1__.createVelocity)(0, 0),\n    renderable: (0,_components_renderable_js__WEBPACK_IMPORTED_MODULE_2__.createRenderable)({\n      BABYLON: BABYLON,\n      scene: scene,\n      type: 'lines',\n      points: [new BABYLON.Vector3(0, 10, 0), new BABYLON.Vector3(-5, -5, 0), new BABYLON.Vector3(5, -5, 0), new BABYLON.Vector3(0, 10, 0)],\n      color: new BABYLON.Color3(1, 1, 1)\n    }),\n    id: 'player'\n  };\n  return [target, playerShip];\n};\nvar createBullet = function createBullet(_ref2) {\n  var BABYLON = _ref2.BABYLON,\n    scene = _ref2.scene,\n    shipPosition = _ref2.shipPosition,\n    shipRotation = _ref2.shipRotation;\n  var bulletSpeed = 500;\n  var angle = shipRotation + Math.PI / 2;\n  var vx = Math.cos(angle) * bulletSpeed;\n  var vy = Math.sin(angle) * bulletSpeed;\n  return {\n    position: (0,_components_position_js__WEBPACK_IMPORTED_MODULE_0__.createPosition)(shipPosition.x, shipPosition.y),\n    velocity: (0,_components_velocity_js__WEBPACK_IMPORTED_MODULE_1__.createVelocity)(vx, vy),\n    renderable: (0,_components_renderable_js__WEBPACK_IMPORTED_MODULE_2__.createRenderable)({\n      BABYLON: BABYLON,\n      scene: scene,\n      type: 'lines',\n      points: [new BABYLON.Vector3(0, 0, 0), new BABYLON.Vector3(0, 5, 0)],\n      color: new BABYLON.Color3(1, 1, 1)\n    }),\n    lifetime: 2\n  };\n};\n\n//# sourceURL=webpack://grok-gamebb/./src/entities.js?");

/***/ }),

/***/ "./src/state.js":
/*!**********************!*\
  !*** ./src/state.js ***!
  \**********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setEntities: () => (/* binding */ setEntities),\n/* harmony export */   sharedEntities: () => (/* binding */ sharedEntities)\n/* harmony export */ });\n// src/state.js\nvar sharedEntities = [];\nvar setEntities = function setEntities(entities) {\n  sharedEntities = entities;\n  window.electronAPI.ipcRenderer.send('update-all-entities', entities.map(function (e) {\n    return {\n      id: e.id,\n      position: {\n        x: e.position.x,\n        y: e.position.y\n      },\n      velocity: e.velocity ? {\n        vx: e.velocity.vx,\n        vy: e.velocity.vy\n      } : null,\n      lifetime: e.lifetime || null\n    };\n  }));\n};\n\n\n//# sourceURL=webpack://grok-gamebb/./src/state.js?");

/***/ }),

/***/ "./src/systems/input.js":
/*!******************************!*\
  !*** ./src/systems/input.js ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupInput: () => (/* binding */ setupInput),\n/* harmony export */   updateInput: () => (/* binding */ updateInput)\n/* harmony export */ });\n/* harmony import */ var _entities_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../entities.js */ \"./src/entities.js\");\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\n// src/systems/input.js\n\nvar setupInput = function setupInput(entities, _ref) {\n  var displays = _ref.displays;\n  entities[0].id = 'target';\n  entities[1].id = 'player';\n  var updateTargetPosition = function updateTargetPosition(x, y, displayId) {\n    var target = entities[0];\n    var playerShip = entities[1];\n    if (target && target.position && playerShip && playerShip.position) {\n      var worldWidth = displays.reduce(function (sum, d) {\n        return sum + d.bounds.width;\n      }, 0);\n      var worldHeight = displays[0].bounds.height;\n      var currentDisplay = displays.find(function (d) {\n        return d.id === displayId;\n      });\n      var screenWidth = currentDisplay.bounds.width;\n      var screenHeight = currentDisplay.bounds.height;\n      var minX = Math.min.apply(Math, _toConsumableArray(displays.map(function (d) {\n        return d.bounds.x;\n      })));\n      var displayStartX = currentDisplay.bounds.x - minX - worldWidth / 2;\n      var worldX = displayStartX + x;\n      var worldY = screenHeight / 2 - y;\n      target.position.x = worldX;\n      target.position.y = worldY;\n      var dx = target.position.x - playerShip.position.x;\n      var dy = target.position.y - playerShip.position.y;\n      var angle = Math.atan2(dy, dx);\n      playerShip.renderable.renderObject.rotation.z = angle - Math.PI / 2;\n    }\n  };\n  var mainThrustAccel = 200;\n  var sideThrustAccel = mainThrustAccel / 2;\n  var keysPressed = new Set();\n  var lastFireTime = 0;\n  var fireRate = 200;\n  var bulletCounter = 0;\n  var applyThrust = function applyThrust(delta) {\n    var playerShip = entities[1];\n    if (!playerShip || !playerShip.velocity) return false;\n    var ax = 0;\n    var ay = 0;\n    var angle = playerShip.renderable.renderObject.rotation.z + Math.PI / 2;\n    if (keysPressed.has('arrowup') || keysPressed.has('w')) {\n      ax += Math.cos(angle) * mainThrustAccel;\n      ay += Math.sin(angle) * mainThrustAccel;\n    }\n    if (keysPressed.has('arrowdown') || keysPressed.has('s')) {\n      ax -= Math.cos(angle) * sideThrustAccel;\n      ay -= Math.sin(angle) * sideThrustAccel;\n    }\n    if (keysPressed.has('arrowleft') || keysPressed.has('a')) {\n      ax -= Math.cos(angle + Math.PI / 2) * sideThrustAccel;\n      ay -= Math.sin(angle + Math.PI / 2) * sideThrustAccel;\n    }\n    if (keysPressed.has('arrowright') || keysPressed.has('d')) {\n      ax += Math.cos(angle + Math.PI / 2) * sideThrustAccel;\n      ay += Math.sin(angle + Math.PI / 2) * sideThrustAccel;\n    }\n    playerShip.velocity.vx += ax * delta;\n    playerShip.velocity.vy += ay * delta;\n    return ax !== 0 || ay !== 0;\n  };\n  var fireBullet = function fireBullet() {\n    var playerShip = entities[1];\n    var now = Date.now();\n    if (keysPressed.has(' ') && now - lastFireTime > fireRate) {\n      var bullet = (0,_entities_js__WEBPACK_IMPORTED_MODULE_0__.createBullet)({\n        BABYLON: BABYLON,\n        scene: scene,\n        shipPosition: {\n          x: playerShip.position.x,\n          y: playerShip.position.y\n        },\n        shipRotation: playerShip.renderable.renderObject.rotation.z\n      });\n      bullet.id = \"bullet_\".concat(bulletCounter++);\n      entities.push(bullet);\n      lastFireTime = now;\n      window.electronAPI.ipcRenderer.send('log', \"Bullet fired: id=\".concat(bullet.id, \", x=\").concat(bullet.position.x, \", y=\").concat(bullet.position.y, \", entities=\").concat(entities.length));\n    }\n  };\n  var initialize = function initialize() {\n    var lastTime = performance.now();\n    var _updateLoop = function updateLoop() {\n      var now = performance.now();\n      var delta = (now - lastTime) / 1000;\n      lastTime = now;\n      var didThrust = applyThrust(delta);\n      fireBullet();\n      if (didThrust) {\n        window.electronAPI.ipcRenderer.send('log', \"Thrust: vx=\".concat(entities[1].velocity.vx, \", vy=\").concat(entities[1].velocity.vy));\n      }\n      requestAnimationFrame(_updateLoop);\n    };\n    requestAnimationFrame(_updateLoop);\n  };\n  window.electronAPI.ipcRenderer.on('mousemove', function (event, _ref2) {\n    var x = _ref2.x,\n      y = _ref2.y,\n      displayId = _ref2.displayId;\n    updateTargetPosition(x, y, displayId);\n  });\n  window.electronAPI.ipcRenderer.on('broadcast-keydown', function (event, key) {\n    if (key) {\n      keysPressed.add(key);\n      window.electronAPI.ipcRenderer.send('log', \"Broadcast key down: \\\"\".concat(key, \"\\\"\"));\n    }\n  });\n  window.electronAPI.ipcRenderer.on('broadcast-keyup', function (event, key) {\n    if (key) {\n      keysPressed[\"delete\"](key);\n      window.electronAPI.ipcRenderer.send('log', \"Broadcast key up: \\\"\".concat(key, \"\\\"\"));\n    }\n  });\n  return {\n    initialize: initialize,\n    updateTargetPosition: updateTargetPosition\n  };\n};\nvar updateInput = function updateInput() {};\n\n//# sourceURL=webpack://grok-gamebb/./src/systems/input.js?");

/***/ }),

/***/ "./src/systems/movement.js":
/*!*********************************!*\
  !*** ./src/systems/movement.js ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   updateMovement: () => (/* binding */ updateMovement)\n/* harmony export */ });\n// src/systems/movement.js\nvar updateMovement = function updateMovement(entities, delta) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _config$worldWidth = config.worldWidth,\n    worldWidth = _config$worldWidth === void 0 ? 7680 : _config$worldWidth,\n    _config$worldHeight = config.worldHeight,\n    worldHeight = _config$worldHeight === void 0 ? 1080 : _config$worldHeight,\n    _config$wrap = config.wrap,\n    wrap = _config$wrap === void 0 ? true : _config$wrap;\n  var syncNeeded = false;\n  var now = Date.now();\n  var lastSync = 0;\n  for (var i = 0; i < entities.length; i++) {\n    var entity = entities[i];\n    if (entity.position && entity.velocity && typeof entity.velocity.vx === 'number' && typeof entity.velocity.vy === 'number') {\n      entity.position.x += entity.velocity.vx * delta;\n      entity.position.y += entity.velocity.vy * delta;\n      if (wrap) {\n        var oldX = entity.position.x;\n        var oldY = entity.position.y;\n        entity.position.x = (entity.position.x + worldWidth / 2) % worldWidth - worldWidth / 2;\n        entity.position.y = (entity.position.y + worldHeight / 2) % worldHeight - worldHeight / 2;\n        if (oldX !== entity.position.x || oldY !== entity.position.y) {\n          window.electronAPI.ipcRenderer.send('log', \"Wrapped: id=\".concat(entity.id, \", from (\").concat(oldX.toFixed(2), \", \").concat(oldY.toFixed(2), \") to (\").concat(entity.position.x.toFixed(2), \", \").concat(entity.position.y.toFixed(2), \")\"));\n          syncNeeded = true;\n        }\n      }\n      if (entity.lifetime) {\n        entity.lifetime -= delta;\n        if (entity.lifetime <= 0) {\n          if (entity.renderable && entity.renderable.renderObject) {\n            entity.renderable.renderObject.dispose();\n          }\n          entities.splice(i, 1);\n          window.electronAPI.ipcRenderer.send('log', \"Bullet expired: id=\".concat(entity.id, \", entities=\").concat(entities.length));\n          i--;\n          continue;\n        }\n      }\n      if (entity.velocity.vx !== 0 || entity.velocity.vy !== 0) {\n        window.electronAPI.ipcRenderer.send('log', \"Moved: id=\".concat(entity.id, \", x=\").concat(entity.position.x.toFixed(2), \", y=\").concat(entity.position.y.toFixed(2), \", vx=\").concat(entity.velocity.vx.toFixed(2), \", vy=\").concat(entity.velocity.vy.toFixed(2)));\n        syncNeeded = true;\n      }\n      if (syncNeeded && now - lastSync > 100) {\n        window.electronAPI.ipcRenderer.send('update-entity-position', {\n          id: entity.id,\n          x: entity.position.x,\n          y: entity.position.y\n        });\n        lastSync = now;\n      }\n    }\n  }\n};\n\n//# sourceURL=webpack://grok-gamebb/./src/systems/movement.js?");

/***/ }),

/***/ "./src/systems/rendering.js":
/*!**********************************!*\
  !*** ./src/systems/rendering.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   updateRendering: () => (/* binding */ updateRendering)\n/* harmony export */ });\nvar updateRendering = function updateRendering(_ref) {\n  var BABYLON = _ref.BABYLON,\n    scene = _ref.scene,\n    camera = _ref.camera,\n    canvas = _ref.canvas;\n  return function (entities) {\n    entities.forEach(function (entity) {\n      if (entity.position && entity.renderable) {\n        var renderObject = entity.renderable.renderObject;\n        renderObject.position.x = entity.position.x;\n        renderObject.position.y = entity.position.y;\n      }\n    });\n    scene.render();\n  };\n};\n\n//# sourceURL=webpack://grok-gamebb/./src/systems/rendering.js?");

/***/ })

}]);